<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration that checks the sun coding conventions from:
    - the Java Language Specification at
      https://docs.oracle.com/javase/specs/jls/se11/html/index.html
    - the Sun Code Conventions at https://www.oracle.com/java/technologies/javase/codeconventions-contents.html
    - the Javadoc guidelines at
      https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html
    - the JDK Api documentation https://docs.oracle.com/en/java/javase/11/
    - some best practices
  Checkstyle is very configurable. Be sure to read the documentation at
  https://checkstyle.org (or in your downloaded distribution).
  Most Checks are configurable, be sure to consult the documentation.
  To completely disable a check, just comment it out or delete it from the file.
  To suppress certain violations please review suppression filters.
  Finally, it is worth reading the documentation.
-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        https://checkstyle.org/config.html#Checker
        <property name="basedir" value="${basedir}"/>
    -->
    <property name="severity" value="error"/>

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- https://checkstyle.org/config_filters.html#SuppressionFilter -->
    <module name="SuppressionFilter">
        <property name="file" value="${org.checkstyle.sun.suppressionfilter.config}"
                  default="checkstyle-suppressions.xml"/>
        <property name="optional" value="true"/>
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See https://checkstyle.org/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See https://checkstyle.org/config_sizes.html -->
    <module name="FileLength"/>
    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="120"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See https://checkstyle.org/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <!-- Miscellaneous other checks.                   -->
    <!-- See https://checkstyle.org/config_misc.html -->
    <!--<module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>-->

    <!-- Checks for Headers                                -->
    <!-- See https://checkstyle.org/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <module name="TreeWalker">

        <!-- Checks for Naming Conventions.                  -->
        <!-- See https://checkstyle.org/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See https://checkstyle.org/config_imports.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See https://checkstyle.org/config_sizes.html -->
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See https://checkstyle.org/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See https://checkstyle.org/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See https://checkstyle.org/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See https://checkstyle.org/config_coding.html -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="ParameterAssignment"/>

        <!-- Checks for class design                         -->
        <!-- See https://checkstyle.org/config_design.html -->
        <module name="DesignForExtension"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See https://checkstyle.org/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters">
            <property name="tokens" value="CTOR_DEF"/>
        </module>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

        <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter -->
        <module name="SuppressionXpathFilter">
            <property name="file" value="${org.checkstyle.sun.suppressionxpathfilter.config}"
                      default="checkstyle-xpath-suppressions.xml"/>
            <property name="optional" value="true"/>
        </module>

        <module name="NPathComplexity"/>
        <module name="JavaNCSS"/>

        <module name="RegexpSinglelineJava">
            <property name="format" value="(.*)\.printStackTrace()"/>
            <property name="message" value="[IC-6821] las excepciones deben ser manejadas apropiadamente (ej. lanzadas hacia arriba, o enviadas al log)"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <module name="FinalLocalVariable"/>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="Index"/>
            <property name="abstractionType" value="interface"/>
            <property name="packageName" value="index"/>
            <property name="interfaceMethods"
                      value="index(term:String;:File):void,
                             search(term:String):Set&lt;File&gt;"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="PersistentIndex"/>
            <property name="abstractionType" value="interface"/>
            <property name="packageName" value="index"/>
            <property name="extendsAbstraction" value="Index"/>
            <property name="interfaceMethods"
                      value="persist:void,
                             restore:boolean"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="InMemoryMapIndex"/>
            <property name="abstractionType" value="class"/>
            <property name="packageName" value="index"/>
            <property name="implementsInterfaces" value="Index"/>
            <property name="privateFields" value="index:Map&lt;String~Set&lt;File&gt;&gt;"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="MapIndex"/>
            <property name="abstractionType" value="class"/>
            <property name="packageName" value="index"/>
            <property name="implementsInterfaces" value="PersistentIndex"/>
            <property name="privateFields"
                      value="indexFile:File,
                             index:Index"/>
            <property name="publicConstructors" value="(:File;:Index)"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="TrieIndex"/>
            <property name="abstractionType" value="class"/>
            <property name="packageName" value="index"/>
            <property name="implementsInterfaces" value="PersistentIndex"/>
            <property name="privateFields"
                      value="indexFile:File,
                             index:Trie&lt;File&gt;"/>
            <property name="publicConstructors" value="(:File;:Trie&lt;File&gt;)"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="Trie"/>
            <property name="abstractionType" value="interface"/>
            <property name="packageName" value="trie"/>
            <property name="interfaceMethods"
                      value="insert(key:String;value:V):void,
                             find(key:String):Set&lt;V&gt;"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="HashTrie"/>
            <property name="abstractionType" value="class"/>
            <property name="packageName" value="trie"/>
            <property name="privateFields" value="root:TrieNode"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="TrieNode"/>
            <property name="abstractionType" value="inner class"/>
            <property name="privateFields"
                      value="children:Map&lt;Character~TrieNode&gt;,
                             bucket:Set&lt;V&gt;"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.InstantiationCheck">
            <property name="ignore"
                      value=".*Test"/>
            <property name="constructors"
                      value="InMemoryMapIndex,
                             MapIndex,
                             TrieIndex,
                             HashTrie"/>
        </module>
        
        <module name="edu.tec.ic6821.checks.EncapsulationCheck">
            <property name="ignore"
                      value=".*Test"/>
        </module>

    </module>
</module>